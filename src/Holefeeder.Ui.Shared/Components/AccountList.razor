@inject IHolefeederApiService HolefeederApiService

<MudSelect T="Account"
           Label="Account"
           @bind-Value="BoundAttributeValue"
           AnchorOrigin="Origin.BottomCenter">
    @foreach (var account in _accounts)
    {
        <MudSelectItem Value="@account">@account.Name</MudSelectItem>
    }
</MudSelect>

@code {
    private IReadOnlyCollection<Account> _accounts = [];

    private Account? BoundAttributeValue
    {
        get => SelectedAccount;
        set => SelectedAccountChanged.InvokeAsync(value);
    }

    [Parameter]
    public Account? SelectedAccount { get; set; }

    [Parameter]
    public EventCallback<Account> SelectedAccountChanged { get; set; }

    public bool IsLoaded { get; private set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoaded = false;
        await LoadAccounts();
        IsLoaded = true;
    }

    private async Task LoadAccounts()
    {
        var result = await HolefeederApiService.GetAccounts(["-favorite", "name"], ["inactive:eq:false"]);
        if (result is {IsSuccessStatusCode: true, Content: not null})
        {
            _accounts = result.Content.ToList();
            SelectedAccount ??= _accounts.First();
            await SelectedAccountChanged.InvokeAsync(SelectedAccount);
        }
    }
}
